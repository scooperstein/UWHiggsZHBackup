Options:
  -h, --help            show this help message and exit
  -b                    no X11 windows
  -g, --generateToys    generate toys
  -f, --fitToys         fit toys
  -p, --plotResults     plot toy results
  -m, --multiJob        run in parallelization mode
  --batch		string: name of batch system to submit; either PBS or LXB (default:LXB)
  -t TOOL, --tool=TOOL  string: combine or lands
  -o OUTPUTDIR, --outputDir=OUTPUTDIR
                        string: directory where all outputs go
  --seed=SEED           int: seed
  --toysPerJob=TOYSPERJOB
                        int: toys per job
  --nParallelJobs=NPARALLELJOBS
                        int: number of parallel jobs
  -a, --addOutput       bool: when plotting, hadd up root files
  --TeVStat		use TeVatron test statistics instead of default frequentist 
                        (valid only for LandS, used for hypothesis separation)

-------------------------------
-------------------------------
# for lands
-------------------------------
-------------------------------

Step 0: Install LandS (HEAD)
https://twiki.cern.ch/twiki/bin/view/CMS/SWGuideLandS#Check_out_and_compile_LandS  [*** make sure it's the HEAD]

Step 1: generate toys
python runSignalSeparation.py -b -m -t "lands" --generateToys --nParallelJobs 100 --toysPerJob 10 -o "$myodir" --card1 "card1" --card2 "card2"

Step 2: fit toys
python runSignalSeparation.py -b -m -t "lands" --fitToys --nParallelJobs 100 --toysPerJob 10 -o "$myodir" --card1 "card1" --card2 "card2"

Step 3: plot variables
python runSignalSeparation.py -b -m -t "lands" --plotResults -a --nParallelJobs 100 --toysPerJob 10 -o "$myodir" --card1 "card1" --card2 "card2"

** Use the "-a" to add up the results for parallel jobs.  


-------------------------------
-------------------------------
# for combine
# the combine version doesn't work! do not use this part
-------------------------------
-------------------------------


Quick recipe: mock example

Step 1: generate toys
python runSignalSeparation.py -b -m --generateToys --nParallelJobs 5 --toysPerJob 5 -o "test7"

Step 2: fit toys
python runSignalSeparation.py -b -m --fitToys --nParallelJobs 5 --toysPerJob 5 -o "test7"

Step 3: plot variables
python runSignalSeparation.py -b -m --plotResults -a --nParallelJobs 5 --toysPerJob 5 -o "test7"

** Use the "-a" to add up the results for parallel jobs.  
** Parallel mode ("-m") only works for the PBS queue system.  Should be updated to work on other batch systems.

============================
============================
============================
============================
============================
============================
